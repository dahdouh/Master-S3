----QUIT----2018-10-26T11:28:58.877899+02:00 Pharo6.1-64.image priorSource: 7863927!!Obj methodsFor: 'method lookup' stamp: 'pm 11/2/2018 08:56' prior: 36338954!lookup: arg1! !!Obj methodsFor: 'method management' stamp: 'pm 11/2/2018 08:56' prior: 36338678!bodyOfMethod: arg1	^self objMethodDict associationAt: arg1 ifAbsent: [ nil ]! !!Obj methodsFor: 'method management' stamp: 'pm 11/2/2018 08:56' prior: 33554696!bodyOfMethod: arg1	^self objMethodDict associationAt: arg1 ifAbsent: [ nil ].! !!Obj methodsFor: 'message passing' stamp: 'pm 11/2/2018 15:41' prior: 36339607!send: arg1 withArguments: arg2	^self basicSend: arg1 withArguments: arg2 from: (self objClass).! !!Obj methodsFor: 'message passing' stamp: 'pm 11/2/2018 15:41' prior: 33555021!send: arg1 withArguments: arg2	"or is it?"	^self basicSend: arg1 withArguments: arg2 from: (self objClass).! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/2/2018 15:46' prior: 33554597!lookup: arg1	! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/2/2018 15:57' prior: 33555392!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	Super isNil	ifTrue:[		^Super lookup:arg1.		]	ifFalse:[		^nil		].		! !!Obj methodsFor: 'message passing' stamp: 'pm 11/2/2018 16:07' prior: 36339607!send: arg1 withArguments: arg2	^self! !!Obj methodsFor: 'method management' stamp: 'pm 11/2/2018 16:08' prior: 36338678!bodyOfMethod: arg1	^self objMethodDict associationAt: arg1 ifAbsent: [ nil ].! !!Obj methodsFor: 'message passing' stamp: 'pm 11/2/2018 16:08' prior: 33555958!send: arg1 withArguments: arg2	"or is it?"	^self basicSend: arg1 withArguments: arg2 from: (self objClass).! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/2/2018 16:08' prior: 36338954!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	Super isNil	ifTrue:[		^Super lookup:arg1.		]	ifFalse:[		^nil		].		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/2/2018 16:08' prior: 33556243!send: arg1 withArguments: arg2	"or is it?"	"^self basicSend: arg1 withArguments: arg2 from: (self objClass)."! !----SNAPSHOT----2018-11-02T16:08:35.949161+01:00 Pharo6.1-64.image priorSource: 2785527!----QUIT----2018-11-02T16:09:05.709094+01:00 Pharo6.1-64.image priorSource: 2583!!Obj methodsFor: 'method lookup' stamp: 'pm 11/2/2018 16:39' prior: 33556901!send: arg1 withArguments: arg2	"or is it?"	self halt.	"^self basicSend: arg1 withArguments: arg2 from: (self objClass)."! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/2/2018 16:40' prior: 33557267!send: arg1 withArguments: arg2	"or is it?"		"^self basicSend: arg1 withArguments: arg2 from: (self objClass)."! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/2/2018 16:40' prior: 33557472!send: arg1 withArguments: arg2	"or is it?"		^self basicSend: arg1 withArguments: arg2 from: (self objClass).! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/2/2018 16:41' prior: 33556434!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	self halt.	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	Super isNil	ifTrue:[		^Super lookup:arg1.		]	ifFalse:[		^nil		].		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/2/2018 16:44' prior: 33557860!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	self halt.	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	Super ~= self 	ifTrue:[		^Super lookup:arg1.		]	ifFalse:[		^nil		].		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/2/2018 16:45' prior: 33558339!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	Super ~= self 	ifTrue:[		^Super lookup:arg1.		]	ifFalse:[		^nil		].		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/2/2018 16:49' prior: 33558821!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	((Super isNil) or:[Super == self])	ifTrue:[		^nil		]	ifFalse:[		^Super lookup:arg1.		].		! !----SNAPSHOT----2018-11-02T16:49:51.458476+01:00 Pharo6.1-64.image priorSource: 2673!!Obj methodsFor: 'method lookup' stamp: 'pm 11/2/2018 16:51' prior: 33559292!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	((self objSuperclassId) isNil)	ifTrue:[		^nil.		].	Super:=self objSuperclass.	Super == self	ifTrue:[		^nil		]	ifFalse:[		^Super lookup:arg1.		].		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/2/2018 16:59' prior: 33559870!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	(((self objSuperclassId) isNil) or:[	Super == self])"if we don't have a super class, or we're reflexive, we fail."	ifTrue:[		^nil.		].	Super:=self objSuperclass.	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/2/2018 17:01' prior: 33560395!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	((self objSuperclassId) isNil) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	Super:=self objSuperclass.	Super==self	ifTrue:[		^nil		].	^Super lookup:arg1.		! !----SNAPSHOT----2018-11-02T17:01:29.255977+01:00 Pharo6.1-64.image priorSource: 5272!!Obj methodsFor: 'message passing' stamp: 'pm 11/2/2018 17:09' prior: 33557667!send: arg1 withArguments: arg2	"or is it?"	Transcript show:arg1.	^self basicSend: arg1 withArguments: arg2 from: (self objClass).! !!Obj methodsFor: 'message passing' stamp: 'pm 11/2/2018 17:09' prior: 33561592!send: arg1 withArguments: arg2	"or is it?"	Transcript show:arg1;cr.	^self basicSend: arg1 withArguments: arg2 from: (self objClass).! !----SNAPSHOT----2018-11-02T17:09:57.159324+01:00 Pharo6.1-64.image priorSource: 6992!!Obj methodsFor: 'message passing' stamp: 'pm 11/2/2018 17:10' prior: 33561808!send: arg1 withArguments: arg2	"or is it?"	^self basicSend: arg1 withArguments: arg2 from: (self objClass).! !!Obj methodsFor: 'message passing' stamp: 'pm 11/2/2018 17:11' prior: 36307178!basicSend: arg1 withArguments: arg2 from: arg3	| tmp1 |	tmp1 := arg3 lookup: arg1.	Transcript show:tmp1;cr.	^ tmp1		ifNil: [ self sendError: arg1 withArgs: arg2 ]		ifNotNil: [ tmp1 valueWithArguments: (Array with: self) , arg2 ]! !!Obj methodsFor: 'message passing' stamp: 'pm 11/2/2018 17:14' prior: 33562307!basicSend: arg1 withArguments: arg2 from: arg3	| tmp1 |	tmp1 := arg3 lookup: arg1.	^ tmp1		ifNil: [ self sendError: arg1 withArgs: arg2 ]		ifNotNil: [ tmp1 valueWithArguments: (Array with: self) , arg2 ]! !!Obj methodsFor: 'message passing' stamp: 'pm 11/2/2018 17:15' prior: 36318139!sendError: arg1 withArgs: arg2	Transcript show:arg1;cr.		^ self send: #error withArguments: {(arg2 copyWithFirst: arg1)}! !!Obj methodsFor: 'message passing' stamp: 'pm 11/2/2018 17:32' prior: 33562917!sendError: arg1 withArgs: arg2	^ self send: #error withArguments: {(arg2 copyWithFirst: arg1)}! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 11:26' prior: 33563124!sendError: arg1 withArgs: arg2	^ self send: #error withArguments: {(arg2 copyWithFirst: arg1)}! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 11:28' prior: 33562625!basicSend: arg1 withArguments: arg2 from: arg3	| tmp1 |	tmp1 := arg3 lookup: arg1.	^ tmp1		ifNil: [ self sendError: arg1 withArgs: arg2 ]		ifNotNil: [ self halt.tmp1 valueWithArguments: (Array with: self) , arg2 ]! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 11:32' prior: 33563483!basicSend: arg1 withArguments: arg2 from: arg3	| tmp1 |	tmp1 := arg3 lookup: arg1.	^ tmp1		ifNil: [ self sendError: arg1 withArgs: arg2 ]		ifNotNil: [ Transcript show:tmp1;cr.tmp1 valueWithArguments: (Array with: self) , arg2 ]! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 11:34' prior: 33563785!basicSend: arg1 withArguments: arg2 from: arg3	| tmp1 |	tmp1 := arg3 lookup: arg1.	^ tmp1		ifNil: [ self sendError: arg1 withArgs: arg2 ]		ifNotNil: [ tmp1 valueWithArguments: (Array with: self) , arg2 ]! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 11:34' prior: 33562114!send: arg1 withArguments: arg2	"or is it?"	self halt.	^self basicSend: arg1 withArguments: arg2 from: (self objClass).! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 18:55' prior: 33564393!send: arg1 withArguments: arg2	"or is it?"	^self basicSend: arg1 withArguments: arg2 from: (self objClass).! !!Obj methodsFor: 'instance allocation' stamp: 'pm 11/3/2018 18:56' prior: 36335592!allocateAnInstance	| tmp1 tmp2 |	tmp1 := self class new: self numberOfIVs.	tmp1 at: (self offsetForName) put: self objName.	tmp2 := self numberOfIVs.	2 to: tmp2 do: [ :tmp3 | tmp1 at: tmp3 put: nil ].	^ tmp1! !!Obj methodsFor: 'instance allocation' stamp: 'pm 11/3/2018 18:58' prior: 33564795!allocateAnInstance	| tmp1 tmp2 |	tmp1 := (self class) new: self numberOfIVs.	tmp1 at: (self offsetForName) put: (self objName).	tmp2 := self numberOfIVs.	2 to: tmp2 do: [ :tmp3 | tmp1 at: tmp3 put: nil ].	^ tmp1! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 19:01' prior: 33563304!sendError: arg1 withArgs: arg2	self halt.	^ self send: #error withArguments: {(arg2 copyWithFirst: arg1)}! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 19:01' prior: 33565397!sendError: arg1 withArgs: arg2	^ self send: #error withArguments: {(arg2 copyWithFirst: arg1)}! !!Obj methodsFor: 'instance allocation' stamp: 'pm 11/3/2018 19:01' prior: 33565096!allocateAnInstance	| tmp1 tmp2 |	tmp1 := (self class) new: self numberOfIVs.	tmp1 at: 1 put: (self objName).	tmp2 := self numberOfIVs.	2 to: tmp2 do: [ :tmp3 | tmp1 at: tmp3 put: nil ].	^ tmp1! !!Obj methodsFor: 'instance allocation' stamp: 'pm 11/3/2018 19:04' prior: 33565771!allocateAnInstance	| tmp1 tmp2 |	tmp1 := (self class) new: self numberOfIVs.	tmp1 at: 1 put: (self objName).	tmp2 := self numberOfIVs.	2 to: tmp2 do: [ :tmp3 | tmp1 at: tmp3 put: nil ].	self halt.	^ tmp1! !!Obj methodsFor: 'instance allocation' stamp: 'pm 11/3/2018 19:08' prior: 33566057!allocateAnInstance	| tmp1 size |	size := self numberOfIVs.	tmp1 := (self class) new: size.	tmp1 at: 1 put: (self objName).	2 to: size do: [ :tmp3 | tmp1 at: tmp3 put: nil ].	^ tmp1! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 19:24' prior: 33564598!send: arg1 withArguments: arg2	"or is it?"	^self basicSend: arg1 withArguments: arg2 from: self.! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 19:26' prior: 33564101!basicSend: arg1 withArguments: arg2 from: arg3	| tmp1 |	tmp1 := arg3 lookup: arg1.	^tmp1		ifNil: [ self sendError: arg1 withArgs: arg2 ]		ifNotNil: [ tmp1 valueWithArguments: (Array with: self) , arg2 ]! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 19:26' prior: 33566625!send: arg1 withArguments: arg2	"or is it?"	^self basicSend: arg1 withArguments: arg2 from: (self objClass).! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 19:27' prior: 36318728!super: arg1 withArguments: arg2 from: arg3	self halt.! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 19:27' prior: 33567291!super: arg1 withArguments: arg2 from: arg3	self halt.	^self! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 19:28' prior: 33567429!super: arg1 withArguments: arg2 from: arg3	^self! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 19:31' prior: 33565588!sendError: arg1 withArgs: arg2	self halt.	^ self send: #error withArguments: {(arg2 copyWithFirst: arg1)}! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 19:36' prior: 33560952!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	((self objSuperclassId) isNil) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	Super:=self objSuperclass.	Super==self	ifTrue:[		^nil		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 19:37' prior: 33567897!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	(Super isNil) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	Super==self	ifTrue:[		^nil		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 19:37' prior: 33568448!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	(Super isNil) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	Super==self	ifTrue:[		^nil		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 19:39' prior: 33568983!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	(self objSuperclass isNil or:[Super==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 19:39' prior: 33569517!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	(self objSuperclass isNil or:[Super==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].		^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 19:41' prior: 33570045!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclassId.	(Super~=nil or:[Super==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 19:42' prior: 33570575!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclassId.	(Super~=#nil or:[Super==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 19:42' prior: 33567708!sendError: arg1 withArgs: arg2	^ self send: #error withArguments: {(arg2 copyWithFirst: arg1)}! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 19:43' prior: 33571091!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclassId.	(Super~=#nil or:[self objSuperclassId==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 19:55' prior: 33571787!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclassId.	Transcript show: Super.	self halt.	(Super~=#nil or:[self objSuperclassId==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 19:56' prior: 33572319!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclassId.	Transcript show: Super.	self halt.	(Super~=#nil or:[self objSuperclass==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 20:07' prior: 33572888!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclassId.	Transcript show: Super;cr.	self halt.	(Super~=#nil or:[self objSuperclass==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 20:08' prior: 33573455!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	Transcript show: Super;cr.	self halt.	(Super~=nil or:[self objSuperclass==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 20:12' prior: 33574025!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	Transcript show: Super;cr;cr.	self halt.	(Super~=nil or:[self objSuperclass==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 20:12' prior: 33574592!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	Transcript show: Super;cr;cr.	self halt.	(Super~=nil or:[Super==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 20:12' prior: 33575162!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	Transcript show: Super;cr;cr.	self halt.	(Super isNil or:[Super==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 20:13' prior: 33575719!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	Transcript show: Super;cr;cr.	(Super isNil or:[Super==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 20:19' prior: 33576277!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	Transcript show: Super getClass ;cr;cr.	(Super isNil or:[Super==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 20:20' prior: 33576823!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Super:=self objSuperclass.	Transcript show: Super ;cr;cr.	(Super isNil or:[Super==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 20:21' prior: 33577379!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	Transcript show: Super ;cr;cr.	(self objSuperclassId isNil or:[	Super:=self objSuperclass.Super==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 20:24' prior: 33577926!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	(self objSuperclass isNil 		or:[Super:=self objSuperclass.			Super==self]) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	^Super lookup:arg1.		! !----QUIT/NOSAVE----2018-11-03T20:25:58.225322+01:00 Pharo6.1-64.image priorSource: 7514!!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 20:26' prior: 33561808!send: arg1 withArguments: arg2	"or is it?"	^self basicSend: arg1 withArguments: arg2 from: (self objClass).! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 20:27' prior: 33560952!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	"if we don't have a super class, we fail."	"((self objSuperclassId) isNil) 	ifTrue:[		^nil.		]."	Super:=self objSuperclass.	Super==self	ifTrue:[		^nil		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 20:27' prior: 33579305!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	"if we don't have a super class, we fail."	((self objSuperclassId) isNil) 	ifTrue:[		^nil.		].	Super:=self objSuperclass.	Super==self	ifTrue:[		^nil		].	^Super lookup:arg1.		! !!Obj methodsFor: 'method lookup' stamp: 'pm 11/3/2018 20:27' prior: 33579861!lookup: arg1	"question, do we have to search in metaclass aswell?	answer might be later in the tutorial"	| Method Super|	Method:=self bodyOfMethod:arg1.	Method isNil	ifFalse:[		^Method."we found a corresponding selector"		].	"else"	"we do the lookup in the superclass."	((self objSuperclassId) isNil) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	Super:=self objSuperclass.	Super==self	ifTrue:[		^nil		].	^Super lookup:arg1.		! !!ObjTest methodsFor: 'tests' stamp: 'pm 11/3/2018 20:29' prior: 36274658!testMethodLookup	Transcript show:((pointClass lookup: #x) isKindOf: BlockClosure)	self assert: ((pointClass lookup: #x) isKindOf: BlockClosure)! !!ObjTest methodsFor: 'tests' stamp: 'pm 11/3/2018 20:29' prior: 33580963!testMethodLookup	Transcript show:((pointClass lookup: #x) isKindOf: BlockClosure).	self assert: ((pointClass lookup: #x) isKindOf: BlockClosure)! !!ObjTest methodsFor: 'tests' stamp: 'pm 11/3/2018 20:30' prior: 33581186!testMethodLookup	Transcript show:(pointClass lookup: #x).	self assert: ((pointClass lookup: #x) isKindOf: BlockClosure)! !!Obj methodsFor: 'method management' stamp: 'pm 11/3/2018 20:30' prior: 33556081!bodyOfMethod: arg1	^self objMethodDict at: arg1 ifAbsent: [ nil ].! !!ObjTest methodsFor: 'tests' stamp: 'pm 11/3/2018 20:31' prior: 33581410!testMethodLookup	self assert: ((pointClass lookup: #x) isKindOf: BlockClosure)! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 20:33' prior: 36318728!super: arg1 withArguments: arg2 from: arg3	^self	! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 20:36' prior: 33581925!super: arg1 withArguments: arg2 from: arg3	! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 20:38' prior: 33582060!super: arg1 withArguments: arg2 from: arg3	| Super |		((self objSuperclassId) isNil) "if we don't have a super class, we fail."	ifTrue:[		^nil.		].	Super:=self objSuperclass.	Super==self	ifTrue:[		^nil		].	^Super basicSend: arg1 withArguments: arg2 from: arg3.! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 20:51' prior: 33582189!super: arg1 withArguments: arg2 from: arg3	^self objSuperclass basicSend: arg1 withArguments: arg2 from: arg3.! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 20:53' prior: 33582549!super: arg1 withArguments: arg2 from: arg3	^(self objClass) objSuperclass basicSend: arg1 withArguments: arg2 from: arg3.! !!Obj methodsFor: 'message passing' stamp: 'pm 11/3/2018 20:53' prior: 33582747!super: arg1 withArguments: arg2 from: arg3	^(self objClass) objSuperclass basicSend: arg1 withArguments: arg2 from: arg3.! !!Obj methodsFor: 'iv management' stamp: 'pm 11/3/2018 20:56' prior: 36331334!valueOfInstanceVariable: arg1	| tmp1 |	tmp1 := self offsetFromObjectOfInstanceVariable: arg1.	tmp1 ~= 0		ifTrue: [ ^ self at: tmp1 ].	^ Error signal.! !!Obj methodsFor: 'iv management' stamp: 'pm 11/3/2018 20:59' prior: 33583161!valueOfInstanceVariable: arg1	| tmp1 |	tmp1 := self offsetFromObjectOfInstanceVariable: arg1.	tmp1 ~= 0		ifTrue: [ ^ self at: tmp1 ].	Error signal.! !!Obj methodsFor: 'iv management' stamp: 'pm 11/3/2018 21:00' prior: 33583397!valueOfInstanceVariable: arg1	| tmp1 |	tmp1 := self offsetFromObjectOfInstanceVariable: arg1.	Transcript show: self.	tmp1 ~= 0		ifTrue: [ ^ self at: tmp1 ].	Error signal.! !!Obj methodsFor: 'iv management' stamp: 'pm 11/3/2018 21:00' prior: 33583631!valueOfInstanceVariable: arg1	| tmp1 |	tmp1 := self offsetFromObjectOfInstanceVariable: arg1.	self halt.	tmp1 ~= 0		ifTrue: [ ^ self at: tmp1 ].	Error signal.! !!Obj methodsFor: 'iv management' stamp: 'pm 11/3/2018 21:00' prior: 33583889!valueOfInstanceVariable: arg1	| tmp1 |	tmp1 := self offsetFromObjectOfInstanceVariable: arg1.	tmp1 ~= 0		ifTrue: [ ^ self at: tmp1 ].! !!Obj methodsFor: 'iv management' stamp: 'pm 11/3/2018 21:31' prior: 36329974!offsetFromObjectOfInstanceVariable: arg1	| t |	t:=self objClass offsetFromClassOfInstanceVariable: arg1.	^t==0		ifTrue:[^self error:'']		ifFalse:[t].! !----SNAPSHOT----2018-11-03T21:37:11.766738+01:00 Pharo6.1-64.image priorSource: 7514!----SNAPSHOT----2018-11-03T21:37:31.262106+01:00 Pharo6.1-64.image priorSource: 30080!----QUIT----2018-11-03T21:38:26.188203+01:00 Pharo6.1-64.image priorSource: 30167!