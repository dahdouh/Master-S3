OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.66344+02:00' ],		#prior : OmReference [ 'Pharo.4rlczyyrpt7184v7lhmvvr4ow', '11' ],		#self : OmReference [ '1' ]	},	#content : EpCategoryAddition {		#classCategoryName : #MetaProg,		#affectedPackageName : #MetaProg	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.710169+02:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Pile\r\tinstanceVariableNames: \'contenu index capacite\'\r\tclassVariableNames: \'tailleDefaut\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MetaProg\''			},			#name : #Pile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #contenu,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #index,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #capacite,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pile class\r\tinstanceVariableNames: \'\''				},				#name : #'Pile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pile,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #tailleDefaut,					#parent : @7				}			],			#category : #MetaProg,			#package : #MetaProg,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.723867+02:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Object',				#traitCompositionSource : '{}',				#definitionSource : 'Object subclass: #Pile\r\tinstanceVariableNames: \'contenu index capacite\'\r\tclassVariableNames: \'tailleDefaut\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MetaProg\''			},			#name : #Pile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #contenu,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #index,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #capacite,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'Pile class\r\tinstanceVariableNames: \'\''				},				#name : #'Pile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #Pile,					#isMetaSide : false				},				#parent : @7,				#content : 'Implantation d\'une pile en utilisant une collection ordonnée.\r\rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tcontenu:\t\t<Collection>\r\tindex:\t\t<Integer>\r\ttaille:\t\t<Integer>\r\r\r    Implementation Points',				#stamp : 'cd 3/8/2017 10:34'			},			#classVariables : OrderedCollection [				RGClassVariableDefinition {					#annotations : IdentityDictionary {						#className : #Pile,						#isMetaSide : false					},					#name : #tailleDefaut,					#parent : @7				}			],			#category : #MetaProg,			#package : #MetaProg,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Implantation d\'une pile en utilisant une collection ordonnée.\r\rInternal Representation and Key Implementation Points.\r\r    Instance Variables\r\tcontenu:\t\t<Collection>\r\tindex:\t\t<Integer>\r\ttaille:\t\t<Integer>\r\r\r    Implementation Points',		#newStamp : 'cd 3/8/2017 10:34'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.74389+02:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'printOn:',			#protocol : #printing,			#sourceCode : 'printOn: aStream\r\t"Cette méthode est appelée par la méthode printString qui fabrique une représentation du    receveur sous forme de chaîne.\r\t PrintString est elle-même appelée par les outils de l\'environnement, par exemple par la    méthode printIt du Playground."\r\t\r\taStream nextPutAll: \'une Pile, de taille: \'.\r\tcapacite printOn: aStream.\r\taStream nextPutAll: \' contenant: \'.\r\tindex printOn: aStream.\r\taStream nextPutAll: \' objets : (\'.\r\tcontenu do: [ :each | each printOn: aStream. aStream space ].\r\taStream nextPut: $).',			#stamp : 'cd 3/15/2017 12:27',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.754867+02:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #capacity,			#protocol : #'métier',			#sourceCode : 'capacity\r\t^capacite\r\t',			#stamp : 'cd 3/28/2018 13:01',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.769011+02:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #pop,			#protocol : #'métier',			#sourceCode : 'pop\r\t"dépile et rend le sommet de pile si la pile n\'est pas vide"\r\t| retour |\r\tself isEmpty\r\t\tifFalse: [\r\t\t\tretour := contenu at: index.\r\t\t\tindex := index - 1.\r\t\t\t^retour]\r\t\tifTrue: [ self error: \'Pile vide, Impossible de dépiler\' ]\r',			#stamp : 'cd 3/28/2018 12:54',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.780388+02:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'push:',			#protocol : #'métier',			#sourceCode : 'push: anObject\r\t"met anObject dans contenu au bon index si la pile n\'est pas pleine"\r\r\tself isFull\r\t\tifFalse: ["les tableaux commencent à l\'index 1"\r\t\t\t\t\tindex := index + 1.\r\t\t\t\t\tcontenu at: index put: anObject]\r\t\tifTrue: [ self error: \'Impossible empiler sur une pile pleine\' ]\r',			#stamp : 'cd 3/30/2018 10:18',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.790549+02:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #size,			#protocol : #'métier',			#sourceCode : 'size\r\t"donne le nombre d\'éléments empilés"\r\t^index\r\t\r\t"^contenu count: [ :each | each isNotNil ]"\r\t',			#stamp : 'cd 3/28/2018 13:06',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.801475+02:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isFull,			#protocol : #'métier',			#sourceCode : 'isFull\r\t^(index = capacite)',			#stamp : 'cd 3/30/2018 10:33',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.811814+02:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #top,			#protocol : #'métier',			#sourceCode : 'top\r\t"rend le sommet de pile si la pile n\'est pas vide, sans dépiler"\r\r\tself isEmpty\r\t\tifFalse: [ ^contenu at: index]\r\t\tifTrue: [ self error: \'Rien au sommet d\'\'une pile vide\' ]\r',			#stamp : 'cd 3/28/2018 12:55',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.823616+02:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #'métier',			#sourceCode : 'grow\r\t| nb oldc |\r\tnb := self size.\r\toldc := contenu.\r\tcapacite := capacite * 2.\r\tcontenu := Array new: capacite.\r\t1 to: nb do: [ :i |  self push: (oldc at: i)]\r\t',			#stamp : 'cd 3/28/2018 13:22',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.834329+02:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #isEmpty,			#protocol : #'métier',			#sourceCode : 'isEmpty\r\t^index = 0',			#stamp : 'cd 3/28/2018 12:53',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.850736+02:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'do:',			#protocol : #enumerating,			#sourceCode : 'do: aBlock\r\t"un itérateur pour la classe Pile"\r\tcontenu do: aBlock.\r\t\t\t\t\t\r',			#stamp : 'cd 4/15/2016 10:37',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.863522+02:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: taille\r\t"initialise les attribus d\'une pile nouvellement créée"\r\t"la pile est vide quand index = 0"\r\tindex := 0.\r\t"la pile est pleine quand index = capacite"\r\tcapacite := taille.\r\t"le contenu est représenté par un tableau"\r\tcontenu := Array new: capacite.\r\t\r\t"self assert: (self isEmpty)."\r\t',			#stamp : 'cd 3/30/2018 09:29',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.905152+02:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #initialize,			#protocol : #'instance creation',			#sourceCode : 'initialize\r\ttailleDefaut := 5.',			#stamp : 'cd 3/28/2018 12:56',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.925396+02:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #new,			#protocol : #'instance creation',			#sourceCode : 'new\r\r\t"Ceci est une méthode de class.\r\tQue vaut \'self\'? La classe à laquelle a été envoyé le message ...\r\tdonc la class Pile ou une de ses sous-classes"\r\t\r\t^super new  initialize: tailleDefaut\r\t',			#stamp : 'cd 3/28/2018 12:34',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.946014+02:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'Pile class',				#isMetaSide : true			},			#name : #example,			#protocol : #examples,			#sourceCode : 'example\r\t"self example" \r\t"Un exemple de la façon dont on peut utiliser une pile dans un programme"\r\t| p |\r\tp := Pile new.\r\tp push: 33.\r\tp push: \'une chaine\'.\r\tp push: 2 @ 3.\r\tp push: 5 factorial.\r\tp push: p isFull.\r\tp pop.\r\tp push: p size.\r\t^p',			#stamp : 'cd 3/28/2018 14:39',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.964189+02:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Pile',				#traitCompositionSource : '{}',				#definitionSource : 'Pile subclass: #PileTypee\r\tinstanceVariableNames: \'typeElements\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MetaProg\''			},			#name : #PileTypee,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PileTypee,						#isMetaSide : false					},					#name : #typeElements,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PileTypee class\r\tinstanceVariableNames: \'\''				},				#name : #'PileTypee class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PileTypee,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MetaProg,			#package : #MetaProg,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.981569+02:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpBehaviorCommentChange {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Pile',				#traitCompositionSource : '{}',				#definitionSource : 'Pile subclass: #PileTypee\r\tinstanceVariableNames: \'typeElements\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MetaProg\''			},			#name : #PileTypee,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #PileTypee,						#isMetaSide : false					},					#name : #typeElements,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PileTypee class\r\tinstanceVariableNames: \'\''				},				#name : #'PileTypee class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PileTypee,					#isMetaSide : false				},				#parent : @7,				#content : 'Une pile où le type des éléments est fixé a priori.',				#stamp : 'cd 3/28/2018 12:58'			},			#classVariables : OrderedCollection [ ],			#category : #MetaProg,			#package : #MetaProg,			#sharedPools : OrderedCollection [ ]		},		#oldComment : '',		#newComment : 'Une pile où le type des éléments est fixé a priori.',		#newStamp : 'cd 3/28/2018 12:58'	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:03.998881+02:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTypee,				#isMetaSide : false			},			#name : #'push:',			#protocol : #'métier',			#sourceCode : 'push: anObject\r\t(anObject isKindOf: typeElements)\r\t\tifTrue: [ super push: anObject ]\r\t\tifFalse: [ self error: \r\t\t\t\'Impossible d\'\'empiler \' , \r\t\t\tanObject asString, \r\t\t\t\' dans une pile typee de \' , \r\t\t\ttypeElements asString]',			#stamp : 'cd 3/24/2018 20:00',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:04.01701+02:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTypee,				#isMetaSide : false			},			#name : #'initialize:',			#protocol : #initialization,			#sourceCode : 'initialize: unType\r\tsuper initialize.\r\ttypeElements := unType.',			#stamp : 'cd 3/28/2018 18:20',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:04.028042+02:00' ],		#prior : OmReference [ '21' ],		#self : OmReference [ '22' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileTypee,				#isMetaSide : false			},			#name : #'de:',			#protocol : #initialization,			#sourceCode : 'de: T\r\tsuper initialize.\r\ttypeElements := T.',			#stamp : 'cd 3/28/2018 13:29',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:04.059034+02:00' ],		#prior : OmReference [ '22' ],		#self : OmReference [ '23' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PileTypee class',				#isMetaSide : true			},			#name : #'de:',			#protocol : #instanceCreation,			#sourceCode : 'de: type\r\t^super new de: type',			#stamp : 'cd 3/28/2018 18:13',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:04.076062+02:00' ],		#prior : OmReference [ '23' ],		#self : OmReference [ '24' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #'PileTypee class',				#isMetaSide : true			},			#name : #example,			#protocol : #examples,			#sourceCode : 'example\r\t"self example"\r\t"Un exemple de la façon dont on peut utiliser une pile typée dans un programme"\r\t| p |\r\tp := PileTypee de:  Number.\r\tp push: 33.\r\tp push: 2.5.\r\tp push: 5 factorial.\r\tp pop.\r\t[ p push: \'hello\'] on: Error do: [ Transcript show: \'ne pas faire\' ].\r\t^p',			#stamp : 'cd 3/28/2018 18:10',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:04.088884+02:00' ],		#prior : OmReference [ '24' ],		#self : OmReference [ '25' ]	},	#content : EpCategoryAddition {		#classCategoryName : #MetaProg-Pile,		#affectedPackageName : #MetaProg	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:04.09541+02:00' ],		#prior : OmReference [ '25' ],		#self : OmReference [ '26' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'TestCase',				#traitCompositionSource : '{}',				#definitionSource : 'TestCase subclass: #TestPile\r\tinstanceVariableNames: \'standard pleine vide\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MetaProg-Pile\''			},			#name : #TestPile,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TestPile,						#isMetaSide : false					},					#name : #standard,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TestPile,						#isMetaSide : false					},					#name : #pleine,					#parent : @7				},				RGInstanceVariableDefinition {					#annotations : IdentityDictionary {						#className : #TestPile,						#isMetaSide : false					},					#name : #vide,					#parent : @7				}			],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'TestPile class\r\tinstanceVariableNames: \'\''				},				#name : #'TestPile class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #TestPile,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MetaProg-Pile,			#package : #MetaProg,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:04.122637+02:00' ],		#prior : OmReference [ '26' ],		#self : OmReference [ '27' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #setUp,			#protocol : #initialization,			#sourceCode : 'setUp\r\r\tTranscript show: \'execution de setUp test Pile\'.\r\t"une pile vide"\r\tvide := Pile new initialize: 3.\r\t\r\t"une pile standard ni vide ni pleine"\r\tstandard := Pile new initialize: 4.\r\tstandard push: 1.\r\t\r\t"une pile pleine"\r\tpleine := Pile new initialize: 2.\r\tpleine push: 1.\r\tpleine push: 2.',			#stamp : 'cd 3/28/2018 17:32',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:04.142859+02:00' ],		#prior : OmReference [ '27' ],		#self : OmReference [ '28' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testPush,			#protocol : #tests,			#sourceCode : 'testPush\r\tstandard push: 33.\r\tself assert: (standard isEmpty not).\r\tself assert: (standard top = 33).',			#stamp : 'cd 3/8/2017 11:48',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:04.15972+02:00' ],		#prior : OmReference [ '28' ],		#self : OmReference [ '29' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testPleine,			#protocol : #tests,			#sourceCode : 'testPleine\r\tself assert: pleine isFull\r\t',			#stamp : 'cd 3/8/2017 11:44',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:04.176359+02:00' ],		#prior : OmReference [ '29' ],		#self : OmReference [ '30' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testFull,			#protocol : #tests,			#sourceCode : 'testFull\r\tself assert: pleine isFull.',			#stamp : 'cd 3/28/2018 17:34',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:04.189951+02:00' ],		#prior : OmReference [ '30' ],		#self : OmReference [ '31' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testPop,			#protocol : #tests,			#sourceCode : 'testPop\r\t| current r |\r\tcurrent := standard top.\r\tstandard push: #test.\r\tr := standard pop.\r\tself assert: (standard isFull not).\r\tself assert: (r == #test).\r\tself assert: (standard top == current).',			#stamp : 'cd 3/15/2017 10:29',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:04.2013+02:00' ],		#prior : OmReference [ '31' ],		#self : OmReference [ '32' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testPush2,			#protocol : #tests,			#sourceCode : 'testPush2\r\tstandard push: 22.\r\tself assert: standard top equals: 22.\r\t',			#stamp : 'cd 3/28/2018 17:35',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:36:04.211195+02:00' ],		#prior : OmReference [ '32' ],		#self : OmReference [ '33' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #TestPile,				#isMetaSide : false			},			#name : #testEmpty,			#protocol : #tests,			#sourceCode : 'testEmpty\r\tself assert: vide isEmpty.',			#stamp : 'cd 3/28/2018 17:33',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:37:16.153272+02:00' ],		#prior : OmReference [ '33' ],		#self : OmReference [ '34' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Pile',				#traitCompositionSource : '{}',				#definitionSource : 'Pile subclass: #IDM\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MetaProg\''			},			#name : #IDM,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'IDM class\r\tinstanceVariableNames: \'\''				},				#name : #'IDM class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #IDM,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MetaProg,			#package : #MetaProg,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:37:43.195932+02:00' ],		#prior : OmReference [ '34' ],		#self : OmReference [ '35' ]	},	#content : EpProtocolAddition {		#behavior : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Pile',				#traitCompositionSource : '{}',				#definitionSource : 'Pile subclass: #IDM\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MetaProg\''			},			#name : #IDM,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'IDM class\r\tinstanceVariableNames: \'\''				},				#name : #'IDM class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #IDM,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MetaProg,			#package : #MetaProg,			#sharedPools : OrderedCollection [ ]		},		#protocol : #doStuff	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:44:42.726554+02:00' ],		#prior : OmReference [ '35' ],		#self : OmReference [ '36' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #IDM,				#isMetaSide : false			},			#name : #idmPile,			#protocol : #doStuff,			#sourceCode : 'idmPile\r\tPile subclass: #PileGrossissante \r\t\t\tinstanceVariableNames:\'\'\r\t\t   classVariableNames:\'\'  \r\t\t\tpackage: \'MetaProg\'.\r\t\t\t(Smalltalk at:#PileGrossissante)\r\t\t\t\taddSelector: #grow withMethod: (Pile compiledMethodAt: #grow).\r\t\t\tPile removeSelector: #grow.',			#stamp : 'Anonymous 9/28/2018 11:44',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:45:23.925096+02:00' ],		#prior : OmReference [ '36' ],		#self : OmReference [ '37' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #IDM,				#isMetaSide : false			},			#name : #idmPile,			#protocol : #doStuff,			#sourceCode : 'idmPile\r\tPile subclass: #PileGrossissante \r\t\t\tinstanceVariableNames:\'\'\r\t\t   classVariableNames:\'\'  \r\t\t\tpackage: \'MetaProg\'.\r\t\t\t(Smalltalk at:#PileGrossissante)\r\t\t\t\taddSelector: #grow withMethod: (Pile compiledMethodAt: #grow).\r\t\t\tPile removeSelector: #grow.',			#stamp : 'Anonymous 9/28/2018 11:44',			#package : #MetaProg		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #IDM,				#isMetaSide : false			},			#name : #idmPile,			#protocol : #doStuff,			#sourceCode : 'idmPile\r\tPile subclass: #PileGrossissante \r\t\t\tinstanceVariableNames:\'\'\r\t\t   classVariableNames:\'\'  \r\t\t\tpackage: \'MetaProg\'.\r\t(Smalltalk at:#PileGrossissante) addSelector: #grow withMethod: (Pile compiledMethodAt: #grow).\r\tPile removeSelector: #grow.',			#stamp : 'Anonymous 9/28/2018 11:45',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:47:08.609618+02:00' ],		#prior : OmReference [ '37' ],		#self : OmReference [ '38' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Pile',				#traitCompositionSource : '{}',				#definitionSource : 'Pile subclass: #PileGrossissante\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MetaProg\''			},			#name : #PileGrossissante,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PileGrossissante class\r\tinstanceVariableNames: \'\''				},				#name : #'PileGrossissante class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PileGrossissante,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MetaProg,			#package : #MetaProg,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:47:08.613934+02:00' ],		#prior : OmReference [ '38' ],		#self : OmReference [ '39' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileGrossissante,				#isMetaSide : false			},			#name : #grow,			#protocol : #'as yet unclassified',			#sourceCode : 'grow\r\t| nb oldc |\r\tnb := self size.\r\toldc := contenu.\r\tcapacite := capacite * 2.\r\tcontenu := Array new: capacite.\r\t1 to: nb do: [ :i |  self push: (oldc at: i)]\r\t',			#stamp : 'cd 3/28/2018 13:22',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'Unknown',		#time : DateAndTime [ '2018-09-28T11:47:08.616406+02:00' ],		#prior : OmReference [ '39' ],		#self : OmReference [ '40' ]	},	#content : EpMethodRemoval {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileGrossissante,				#isMetaSide : false			},			#name : #grow,			#protocol : #'métier',			#sourceCode : 'grow\r\t| nb oldc |\r\tnb := self size.\r\toldc := contenu.\r\tcapacite := capacite * 2.\r\tcontenu := Array new: capacite.\r\t1 to: nb do: [ :i |  self push: (oldc at: i)]\r\t',			#stamp : 'cd 3/28/2018 13:22',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-28T11:51:44.367875+02:00' ],		#prior : OmReference [ '40' ],		#self : OmReference [ '41' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #IDM,				#isMetaSide : false			},			#name : #idmPile,			#protocol : #doStuff,			#sourceCode : 'idmPile\r\tPile subclass: #PileGrossissante \r\t\t\tinstanceVariableNames:\'\'\r\t\t   classVariableNames:\'\'  \r\t\t\tpackage: \'MetaProg\'.\r\t(Smalltalk at:#PileGrossissante) addSelector: #grow withMethod: (Pile compiledMethodAt: #grow).\r\tPile removeSelector: #grow.',			#stamp : 'Anonymous 9/28/2018 11:45',			#package : #MetaProg		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #IDM,				#isMetaSide : false			},			#name : #idmPile,			#protocol : #doStuff,			#sourceCode : 'idmPile\r\t(Smalltalk at:#PileGrossissante) on: Exception do:[\r\t\tPile subclass: #PileGrossissante \r\t\t\t\tinstanceVariableNames:\'\'\r\t\t\t   classVariableNames:\'\'  \r\t\t\t\tpackage: \'MetaProg\'.\r\t\t(Smalltalk at:#PileGrossissante) addSelector: #grow withMethod: (Pile compiledMethodAt: #grow).\r\t\tPile removeSelector: #grow.\r\t]',			#stamp : 'pm 9/28/2018 11:51',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-28T11:55:14.68953+02:00' ],		#prior : OmReference [ '41' ],		#self : OmReference [ '42' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBRemoveClassRefactoring classNames: #(#PileGrossissante ))'	}}OmEntry {	#tags : {		#author : 'pm',		#prior : OmReference [ '42' ],		#self : OmReference [ '43' ],		#time : DateAndTime [ '2018-09-28T11:55:14.829838+02:00' ],		#trigger : @3	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Pile',				#traitCompositionSource : '{}',				#definitionSource : 'Pile subclass: #PileGrossissante\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #MetaProg'			},			#name : #PileGrossissante,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PileGrossissante class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoletePileGrossissante class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoletePileGrossissante,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MetaProg,			#package : #MetaProg,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-28T11:56:07.677426+02:00' ],		#prior : OmReference [ '43' ],		#self : OmReference [ '44' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #IDM,				#isMetaSide : false			},			#name : #idmPile,			#protocol : #doStuff,			#sourceCode : 'idmPile\r\t(Smalltalk at:#PileGrossissante) on: Exception do:[\r\t\tPile subclass: #PileGrossissante \r\t\t\t\tinstanceVariableNames:\'\'\r\t\t\t   classVariableNames:\'\'  \r\t\t\t\tpackage: \'MetaProg\'.\r\t\t(Smalltalk at:#PileGrossissante) addSelector: #grow withMethod: (Pile compiledMethodAt: #grow).\r\t\tPile removeSelector: #grow.\r\t]',			#stamp : 'pm 9/28/2018 11:51',			#package : #MetaProg		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #IDM,				#isMetaSide : false			},			#name : #idmPile,			#protocol : #doStuff,			#sourceCode : 'idmPile\r\t[Smalltalk at:#PileGrossissante] on: Exception do:[\r\t\tPile subclass: #PileGrossissante \r\t\t\t\tinstanceVariableNames:\'\'\r\t\t\t   classVariableNames:\'\'  \r\t\t\t\tpackage: \'MetaProg\'.\r\t\t(Smalltalk at:#PileGrossissante) addSelector: #grow withMethod: (Pile compiledMethodAt: #grow).\r\t\tPile removeSelector: #grow.\r\t]',			#stamp : 'pm 9/28/2018 11:56',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-28T11:56:11.196328+02:00' ],		#prior : OmReference [ '44' ],		#self : OmReference [ '45' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Pile',				#traitCompositionSource : '{}',				#definitionSource : 'Pile subclass: #PileGrossissante\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MetaProg\''			},			#name : #PileGrossissante,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PileGrossissante class\r\tinstanceVariableNames: \'\''				},				#name : #'PileGrossissante class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PileGrossissante,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MetaProg,			#package : #MetaProg,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-28T12:01:38.926543+02:00' ],		#prior : OmReference [ '45' ],		#self : OmReference [ '46' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #IDM,				#isMetaSide : false			},			#name : #idmPile,			#protocol : #doStuff,			#sourceCode : 'idmPile\r\t[Smalltalk at:#PileGrossissante] on: Exception do:[\r\t\tPile subclass: #PileGrossissante \r\t\t\t\tinstanceVariableNames:\'\'\r\t\t\t   classVariableNames:\'\'  \r\t\t\t\tpackage: \'MetaProg\'.\r\t\t(Smalltalk at:#PileGrossissante) addSelector: #grow withMethod: (Pile compiledMethodAt: #grow).\r\t\tPile removeSelector: #grow.\r\t]',			#stamp : 'pm 9/28/2018 11:56',			#package : #MetaProg		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #IDM,				#isMetaSide : false			},			#name : #idmPile,			#protocol : #doStuff,			#sourceCode : 'idmPile\r\t[Smalltalk at:#PileGrossissante] on: Exception do:[\r\t\tPile subclass: #PileGrossissante \r\t\t\t\tinstanceVariableNames:\'\'\r\t\t\t   classVariableNames:\'\'  \r\t\t\t\tpackage: \'MetaProg\'.\r\t\t(Smalltalk at:#PileGrossissante) addSelector: #grow withMethod: (Pile compiledMethodAt: #grow).\r\t\t"Pile removeSelector: #grow."\r\t\t(Smalltalk at:#PileGrossissante) addSelector: #push withMethod: (Compiler compile: [\r\t\t\t"Method push"\r\t\t\t\t\r\t\t\t]). \r\t]',			#stamp : 'pm 9/28/2018 12:01',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-28T12:02:36.504962+02:00' ],		#prior : OmReference [ '46' ],		#self : OmReference [ '47' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #IDM,				#isMetaSide : false			},			#name : #idmPile,			#protocol : #doStuff,			#sourceCode : 'idmPile\r\t[Smalltalk at:#PileGrossissante] on: Exception do:[\r\t\tPile subclass: #PileGrossissante \r\t\t\t\tinstanceVariableNames:\'\'\r\t\t\t   classVariableNames:\'\'  \r\t\t\t\tpackage: \'MetaProg\'.\r\t\t(Smalltalk at:#PileGrossissante) addSelector: #grow withMethod: (Pile compiledMethodAt: #grow).\r\t\t"Pile removeSelector: #grow."\r\t\t(Smalltalk at:#PileGrossissante) addSelector: #push withMethod: (Compiler compile: [\r\t\t\t"Method push"\r\t\t\t\t\r\t\t\t]). \r\t]',			#stamp : 'pm 9/28/2018 12:01',			#package : #MetaProg		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #IDM,				#isMetaSide : false			},			#name : #idmPile,			#protocol : #doStuff,			#sourceCode : 'idmPile\r\t[Smalltalk at:#PileGrossissante] on: Exception do:[\r\t\tPile subclass: #PileGrossissante \r\t\t\t\tinstanceVariableNames:\'\'\r\t\t\t   classVariableNames:\'\'  \r\t\t\t\tpackage: \'MetaProg\'.\r\t\t(Smalltalk at:#PileGrossissante) addSelector: #grow withMethod: (Pile compiledMethodAt: #grow).\r\t\t"Pile removeSelector: #grow."\r\t\t(Smalltalk at:#PileGrossissante) addSelector: #push withMethod: (Compiler compile: [^1]). \r\t]',			#stamp : 'pm 9/28/2018 12:02',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-28T12:03:50.981157+02:00' ],		#prior : OmReference [ '47' ],		#self : OmReference [ '48' ]	},	#content : EpGenericRefactoring {		#storeString : '(RBRemoveClassRefactoring classNames: #(#PileGrossissante ))'	}}OmEntry {	#tags : {		#author : 'pm',		#prior : OmReference [ '48' ],		#self : OmReference [ '49' ],		#time : DateAndTime [ '2018-09-28T12:03:51.141733+02:00' ],		#trigger : @3	},	#content : EpClassRemoval {		#classRemoved : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Pile',				#traitCompositionSource : '{}',				#definitionSource : 'Pile subclass: #PileGrossissante\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: #MetaProg'			},			#name : #PileGrossissante,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PileGrossissante class\r\tinstanceVariableNames: \'\''				},				#name : #'AnObsoletePileGrossissante class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #AnObsoletePileGrossissante,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MetaProg,			#package : #MetaProg,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-28T12:04:19.609264+02:00' ],		#prior : OmReference [ '49' ],		#self : OmReference [ '50' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Pile,				#isMetaSide : false			},			#name : #grow,			#protocol : #'métier',			#sourceCode : 'grow\r\t| nb oldc |\r\tnb := self size.\r\toldc := contenu.\r\tcapacite := capacite * 2.\r\tcontenu := Array new: capacite.\r\t1 to: nb do: [ :i |  self push: (oldc at: i)]\r',			#stamp : 'pm 9/28/2018 12:04',			#package : #MetaProg		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-28T12:04:28.815886+02:00' ],		#prior : OmReference [ '50' ],		#self : OmReference [ '51' ]	},	#content : EpClassAddition {		#class : RGClassDefinition {			#annotations : IdentityDictionary {				#superclassName : 'Pile',				#traitCompositionSource : '{}',				#definitionSource : 'Pile subclass: #PileGrossissante\r\tinstanceVariableNames: \'\'\r\tclassVariableNames: \'\'\r\tpoolDictionaries: \'\'\r\tcategory: \'MetaProg\''			},			#name : #PileGrossissante,			#methods : IdentityDictionary { },			#protocols : Set [ ],			#instanceVariables : OrderedCollection [ ],			#metaClass : RGMetaclassDefinition {				#annotations : IdentityDictionary {					#traitCompositionSource : '{}',					#definitionSource : 'PileGrossissante class\r\tinstanceVariableNames: \'\''				},				#name : #'PileGrossissante class',				#methods : IdentityDictionary { },				#protocols : Set [ ],				#instanceVariables : OrderedCollection [ ],				#baseClass : @7			},			#comment : RGCommentDefinition {				#annotations : IdentityDictionary {					#className : #PileGrossissante,					#isMetaSide : false				},				#parent : @7,				#content : ''			},			#classVariables : OrderedCollection [ ],			#category : #MetaProg,			#package : #MetaProg,			#sharedPools : OrderedCollection [ ]		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-09-28T12:04:28.818732+02:00' ],		#prior : OmReference [ '51' ],		#self : OmReference [ '52' ]	},	#content : EpMethodAddition {		#method : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #PileGrossissante,				#isMetaSide : false			},			#name : #grow,			#protocol : #'as yet unclassified',			#sourceCode : 'grow\r\t| nb oldc |\r\tnb := self size.\r\toldc := contenu.\r\tcapacite := capacite * 2.\r\tcontenu := Array new: capacite.\r\t1 to: nb do: [ :i |  self push: (oldc at: i)]\r',			#stamp : 'pm 9/28/2018 12:04',			#package : #MetaProg		}	}}