OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-02T08:56:45.164102+01:00' ],		#prior : OmReference [ 'Pharo.aohdbbmxs3k1k5r3uqnwz8ugr', '24' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t^ self objMethodDict associationAt: arg1 ifAbsent: [  ]',			#stamp : '',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r',			#stamp : 'pm 11/2/2018 08:56',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-02T08:56:56.692386+01:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'bodyOfMethod:',			#protocol : #'method management',			#sourceCode : 'bodyOfMethod: arg1\r\t^ self lookup: arg1',			#stamp : '',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'bodyOfMethod:',			#protocol : #'method management',			#sourceCode : 'bodyOfMethod: arg1\r\t^self objMethodDict associationAt: arg1 ifAbsent: [ nil ]',			#stamp : 'pm 11/2/2018 08:56',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-02T08:56:59.977778+01:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'bodyOfMethod:',			#protocol : #'method management',			#sourceCode : 'bodyOfMethod: arg1\r\t^self objMethodDict associationAt: arg1 ifAbsent: [ nil ]',			#stamp : 'pm 11/2/2018 08:56',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'bodyOfMethod:',			#protocol : #'method management',			#sourceCode : 'bodyOfMethod: arg1\r\t^self objMethodDict associationAt: arg1 ifAbsent: [ nil ].',			#stamp : 'pm 11/2/2018 08:56',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-02T15:41:11.698579+01:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'send:withArguments:',			#protocol : #'message passing',			#sourceCode : 'send: arg1 withArguments: arg2\r\t',			#stamp : '',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'send:withArguments:',			#protocol : #'message passing',			#sourceCode : 'send: arg1 withArguments: arg2\r\t^self basicSend: arg1 withArguments: arg2 from: (self objClass).',			#stamp : 'pm 11/2/2018 15:41',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-02T15:41:16.952325+01:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'send:withArguments:',			#protocol : #'message passing',			#sourceCode : 'send: arg1 withArguments: arg2\r\t^self basicSend: arg1 withArguments: arg2 from: (self objClass).',			#stamp : 'pm 11/2/2018 15:41',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'send:withArguments:',			#protocol : #'message passing',			#sourceCode : 'send: arg1 withArguments: arg2\r\t"or is it?"\r\t^self basicSend: arg1 withArguments: arg2 from: (self objClass).',			#stamp : 'pm 11/2/2018 15:41',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-02T15:46:54.523198+01:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r',			#stamp : 'pm 11/2/2018 08:56',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t\r',			#stamp : 'pm 11/2/2018 15:46',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-02T15:57:55.931047+01:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t\r',			#stamp : 'pm 11/2/2018 15:46',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t"question, do we have to search in metaclass aswell?\r\tanswer might be later in the tutorial"\r\r\t| Method Super|\r\tMethod:=self bodyOfMethod:arg1.\r\tMethod isNil\r\tifFalse:[\r\t\t^Method."we found a corresponding selector"\r\t\t].\r\t"else"\r\t"we do the lookup in the superclass."\r\tSuper:=self objSuperclass.\r\tSuper isNil\r\tifTrue:[\r\t\t^Super lookup:arg1.\r\t\t]\r\tifFalse:[\r\t\t^nil\r\t\t].\r\t\t\r\r',			#stamp : 'pm 11/2/2018 15:57',			#package : #ObjVSkeleton		}	}}