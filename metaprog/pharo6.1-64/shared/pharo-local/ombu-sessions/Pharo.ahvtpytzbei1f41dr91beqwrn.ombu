OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:26:19.187494+01:00' ],		#prior : OmReference [ 'Pharo.caruu7yopus9nq4k5tg64hgi0', '13' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'send:withArguments:',			#protocol : #'message passing',			#sourceCode : 'send: arg1 withArguments: arg2\r\t"or is it?"\r\tTranscript show:arg1;cr.\r\t^self basicSend: arg1 withArguments: arg2 from: (self objClass).',			#stamp : 'pm 11/2/2018 17:09',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'send:withArguments:',			#protocol : #'message passing',			#sourceCode : 'send: arg1 withArguments: arg2\r\t"or is it?"\r\t^self basicSend: arg1 withArguments: arg2 from: (self objClass).',			#stamp : 'pm 11/3/2018 20:26',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:27:20.289511+01:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t"question, do we have to search in metaclass aswell?\r\tanswer might be later in the tutorial"\r\r\t| Method Super|\r\r\tMethod:=self bodyOfMethod:arg1.\r\tMethod isNil\r\tifFalse:[\r\t\t^Method."we found a corresponding selector"\r\t\t].\r\t"else"\r\t"we do the lookup in the superclass."\r\t((self objSuperclassId) isNil) "if we don\'t have a super class, we fail."\r\tifTrue:[\r\t\t^nil.\r\t\t].\r\r\tSuper:=self objSuperclass.\r\tSuper==self\r\tifTrue:[\r\t\t^nil\r\t\t].\r\t^Super lookup:arg1.\r\t\t\r\r',			#stamp : 'pm 11/2/2018 17:01',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t"question, do we have to search in metaclass aswell?\r\tanswer might be later in the tutorial"\r\r\t| Method Super|\r\r\tMethod:=self bodyOfMethod:arg1.\r\tMethod isNil\r\tifFalse:[\r\t\t^Method."we found a corresponding selector"\r\t\t].\r\t"else"\r\t"we do the lookup in the superclass."\r\r\t"if we don\'t have a super class, we fail."\r\t"((self objSuperclassId) isNil) \r\tifTrue:[\r\t\t^nil.\r\t\t]."\r\r\tSuper:=self objSuperclass.\r\tSuper==self\r\tifTrue:[\r\t\t^nil\r\t\t].\r\t^Super lookup:arg1.\r\t\t\r\r',			#stamp : 'pm 11/3/2018 20:27',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:27:38.707849+01:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t"question, do we have to search in metaclass aswell?\r\tanswer might be later in the tutorial"\r\r\t| Method Super|\r\r\tMethod:=self bodyOfMethod:arg1.\r\tMethod isNil\r\tifFalse:[\r\t\t^Method."we found a corresponding selector"\r\t\t].\r\t"else"\r\t"we do the lookup in the superclass."\r\r\t"if we don\'t have a super class, we fail."\r\t"((self objSuperclassId) isNil) \r\tifTrue:[\r\t\t^nil.\r\t\t]."\r\r\tSuper:=self objSuperclass.\r\tSuper==self\r\tifTrue:[\r\t\t^nil\r\t\t].\r\t^Super lookup:arg1.\r\t\t\r\r',			#stamp : 'pm 11/3/2018 20:27',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t"question, do we have to search in metaclass aswell?\r\tanswer might be later in the tutorial"\r\r\t| Method Super|\r\r\tMethod:=self bodyOfMethod:arg1.\r\tMethod isNil\r\tifFalse:[\r\t\t^Method."we found a corresponding selector"\r\t\t].\r\t"else"\r\t"we do the lookup in the superclass."\r\r\t"if we don\'t have a super class, we fail."\r\t((self objSuperclassId) isNil) \r\tifTrue:[\r\t\t^nil.\r\t\t].\r\r\tSuper:=self objSuperclass.\r\tSuper==self\r\tifTrue:[\r\t\t^nil\r\t\t].\r\t^Super lookup:arg1.\r\t\t\r\r',			#stamp : 'pm 11/3/2018 20:27',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:27:44.102018+01:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t"question, do we have to search in metaclass aswell?\r\tanswer might be later in the tutorial"\r\r\t| Method Super|\r\r\tMethod:=self bodyOfMethod:arg1.\r\tMethod isNil\r\tifFalse:[\r\t\t^Method."we found a corresponding selector"\r\t\t].\r\t"else"\r\t"we do the lookup in the superclass."\r\r\t"if we don\'t have a super class, we fail."\r\t((self objSuperclassId) isNil) \r\tifTrue:[\r\t\t^nil.\r\t\t].\r\r\tSuper:=self objSuperclass.\r\tSuper==self\r\tifTrue:[\r\t\t^nil\r\t\t].\r\t^Super lookup:arg1.\r\t\t\r\r',			#stamp : 'pm 11/3/2018 20:27',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t"question, do we have to search in metaclass aswell?\r\tanswer might be later in the tutorial"\r\r\t| Method Super|\r\r\tMethod:=self bodyOfMethod:arg1.\r\tMethod isNil\r\tifFalse:[\r\t\t^Method."we found a corresponding selector"\r\t\t].\r\t"else"\r\t"we do the lookup in the superclass."\r\r\t((self objSuperclassId) isNil) "if we don\'t have a super class, we fail."\r\tifTrue:[\r\t\t^nil.\r\t\t].\r\r\tSuper:=self objSuperclass.\r\tSuper==self\r\tifTrue:[\r\t\t^nil\r\t\t].\r\t^Super lookup:arg1.\r\t\t\r\r',			#stamp : 'pm 11/3/2018 20:27',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:29:14.399474+01:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ObjTest,				#isMetaSide : false			},			#name : #testMethodLookup,			#protocol : #tests,			#sourceCode : 'testMethodLookup\r\tself assert: ((pointClass lookup: #x) isKindOf: BlockClosure)',			#stamp : '',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ObjTest,				#isMetaSide : false			},			#name : #testMethodLookup,			#protocol : #tests,			#sourceCode : 'testMethodLookup\r\tTranscript show:((pointClass lookup: #x) isKindOf: BlockClosure)\r\tself assert: ((pointClass lookup: #x) isKindOf: BlockClosure)',			#stamp : 'pm 11/3/2018 20:29',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:29:15.670048+01:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ObjTest,				#isMetaSide : false			},			#name : #testMethodLookup,			#protocol : #tests,			#sourceCode : 'testMethodLookup\r\tTranscript show:((pointClass lookup: #x) isKindOf: BlockClosure)\r\tself assert: ((pointClass lookup: #x) isKindOf: BlockClosure)',			#stamp : 'pm 11/3/2018 20:29',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ObjTest,				#isMetaSide : false			},			#name : #testMethodLookup,			#protocol : #tests,			#sourceCode : 'testMethodLookup\r\tTranscript show:((pointClass lookup: #x) isKindOf: BlockClosure).\r\tself assert: ((pointClass lookup: #x) isKindOf: BlockClosure)',			#stamp : 'pm 11/3/2018 20:29',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:30:11.746789+01:00' ],		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ObjTest,				#isMetaSide : false			},			#name : #testMethodLookup,			#protocol : #tests,			#sourceCode : 'testMethodLookup\r\tTranscript show:((pointClass lookup: #x) isKindOf: BlockClosure).\r\tself assert: ((pointClass lookup: #x) isKindOf: BlockClosure)',			#stamp : 'pm 11/3/2018 20:29',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ObjTest,				#isMetaSide : false			},			#name : #testMethodLookup,			#protocol : #tests,			#sourceCode : 'testMethodLookup\r\tTranscript show:(pointClass lookup: #x).\r\tself assert: ((pointClass lookup: #x) isKindOf: BlockClosure)',			#stamp : 'pm 11/3/2018 20:30',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:30:44.180948+01:00' ],		#prior : OmReference [ '7' ],		#self : OmReference [ '8' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'bodyOfMethod:',			#protocol : #'method management',			#sourceCode : 'bodyOfMethod: arg1\r\t^self objMethodDict associationAt: arg1 ifAbsent: [ nil ].',			#stamp : 'pm 11/2/2018 16:08',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'bodyOfMethod:',			#protocol : #'method management',			#sourceCode : 'bodyOfMethod: arg1\r\t^self objMethodDict at: arg1 ifAbsent: [ nil ].',			#stamp : 'pm 11/3/2018 20:30',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:31:45.80655+01:00' ],		#prior : OmReference [ '8' ],		#self : OmReference [ '9' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ObjTest,				#isMetaSide : false			},			#name : #testMethodLookup,			#protocol : #tests,			#sourceCode : 'testMethodLookup\r\tTranscript show:(pointClass lookup: #x).\r\tself assert: ((pointClass lookup: #x) isKindOf: BlockClosure)',			#stamp : 'pm 11/3/2018 20:30',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #ObjTest,				#isMetaSide : false			},			#name : #testMethodLookup,			#protocol : #tests,			#sourceCode : 'testMethodLookup\r\tself assert: ((pointClass lookup: #x) isKindOf: BlockClosure)',			#stamp : 'pm 11/3/2018 20:31',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:33:09.897068+01:00' ],		#prior : OmReference [ '9' ],		#self : OmReference [ '10' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'super:withArguments:from:',			#protocol : #'message passing',			#sourceCode : 'super: arg1 withArguments: arg2 from: arg3\r\t',			#stamp : '',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'super:withArguments:from:',			#protocol : #'message passing',			#sourceCode : 'super: arg1 withArguments: arg2 from: arg3\r\t^self\r\t',			#stamp : 'pm 11/3/2018 20:33',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:36:34.046504+01:00' ],		#prior : OmReference [ '10' ],		#self : OmReference [ '11' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'super:withArguments:from:',			#protocol : #'message passing',			#sourceCode : 'super: arg1 withArguments: arg2 from: arg3\r\t^self\r\t',			#stamp : 'pm 11/3/2018 20:33',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'super:withArguments:from:',			#protocol : #'message passing',			#sourceCode : 'super: arg1 withArguments: arg2 from: arg3\r\r\t',			#stamp : 'pm 11/3/2018 20:36',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:38:25.855672+01:00' ],		#prior : OmReference [ '11' ],		#self : OmReference [ '12' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'super:withArguments:from:',			#protocol : #'message passing',			#sourceCode : 'super: arg1 withArguments: arg2 from: arg3\r\r\t',			#stamp : 'pm 11/3/2018 20:36',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'super:withArguments:from:',			#protocol : #'message passing',			#sourceCode : 'super: arg1 withArguments: arg2 from: arg3\r\t| Super |\t\r\r\t((self objSuperclassId) isNil) "if we don\'t have a super class, we fail."\r\tifTrue:[\r\t\t^nil.\r\t\t].\r\r\tSuper:=self objSuperclass.\r\tSuper==self\r\tifTrue:[\r\t\t^nil\r\t\t].\r\r\t^Super basicSend: arg1 withArguments: arg2 from: arg3.\r\r',			#stamp : 'pm 11/3/2018 20:38',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:51:26.555948+01:00' ],		#prior : OmReference [ '12' ],		#self : OmReference [ '13' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'super:withArguments:from:',			#protocol : #'message passing',			#sourceCode : 'super: arg1 withArguments: arg2 from: arg3\r\t| Super |\t\r\r\t((self objSuperclassId) isNil) "if we don\'t have a super class, we fail."\r\tifTrue:[\r\t\t^nil.\r\t\t].\r\r\tSuper:=self objSuperclass.\r\tSuper==self\r\tifTrue:[\r\t\t^nil\r\t\t].\r\r\t^Super basicSend: arg1 withArguments: arg2 from: arg3.\r\r',			#stamp : 'pm 11/3/2018 20:38',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'super:withArguments:from:',			#protocol : #'message passing',			#sourceCode : 'super: arg1 withArguments: arg2 from: arg3\r\r\t^self objSuperclass basicSend: arg1 withArguments: arg2 from: arg3.\r\r',			#stamp : 'pm 11/3/2018 20:51',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:53:21.263029+01:00' ],		#prior : OmReference [ '13' ],		#self : OmReference [ '14' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'super:withArguments:from:',			#protocol : #'message passing',			#sourceCode : 'super: arg1 withArguments: arg2 from: arg3\r\r\t^self objSuperclass basicSend: arg1 withArguments: arg2 from: arg3.\r\r',			#stamp : 'pm 11/3/2018 20:51',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'super:withArguments:from:',			#protocol : #'message passing',			#sourceCode : 'super: arg1 withArguments: arg2 from: arg3\r\r\t^(self objClass) objSuperclass basicSend: arg1 withArguments: arg2 from: arg3.\r\r',			#stamp : 'pm 11/3/2018 20:53',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:53:54.676378+01:00' ],		#prior : OmReference [ '14' ],		#self : OmReference [ '15' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'super:withArguments:from:',			#protocol : #'message passing',			#sourceCode : 'super: arg1 withArguments: arg2 from: arg3\r\r\t^(self objClass) objSuperclass basicSend: arg1 withArguments: arg2 from: arg3.\r\r',			#stamp : 'pm 11/3/2018 20:53',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'super:withArguments:from:',			#protocol : #'message passing',			#sourceCode : 'super: arg1 withArguments: arg2 from: arg3\r\r\t^(self objClass) objSuperclass basicSend: arg1 withArguments: arg2 from: arg3.',			#stamp : 'pm 11/3/2018 20:53',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:56:37.45914+01:00' ],		#prior : OmReference [ '15' ],		#self : OmReference [ '16' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'valueOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'valueOfInstanceVariable: arg1\r\t| tmp1 |\r\ttmp1 := self offsetFromObjectOfInstanceVariable: arg1.\r\ttmp1 ~= 0\r\t\tifTrue: [ ^ self at: tmp1 ].\r\t^ self\r\t\terror: \'This instance variable symbol doesn\'\'t exist in this class\'',			#stamp : '',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'valueOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'valueOfInstanceVariable: arg1\r\t| tmp1 |\r\ttmp1 := self offsetFromObjectOfInstanceVariable: arg1.\r\ttmp1 ~= 0\r\t\tifTrue: [ ^ self at: tmp1 ].\r\t^ Error signal.',			#stamp : 'pm 11/3/2018 20:56',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T20:59:43.966438+01:00' ],		#prior : OmReference [ '16' ],		#self : OmReference [ '17' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'valueOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'valueOfInstanceVariable: arg1\r\t| tmp1 |\r\ttmp1 := self offsetFromObjectOfInstanceVariable: arg1.\r\ttmp1 ~= 0\r\t\tifTrue: [ ^ self at: tmp1 ].\r\t^ Error signal.',			#stamp : 'pm 11/3/2018 20:56',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'valueOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'valueOfInstanceVariable: arg1\r\t| tmp1 |\r\ttmp1 := self offsetFromObjectOfInstanceVariable: arg1.\r\ttmp1 ~= 0\r\t\tifTrue: [ ^ self at: tmp1 ].\r\tError signal.',			#stamp : 'pm 11/3/2018 20:59',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T21:00:06.648899+01:00' ],		#prior : OmReference [ '17' ],		#self : OmReference [ '18' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'valueOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'valueOfInstanceVariable: arg1\r\t| tmp1 |\r\ttmp1 := self offsetFromObjectOfInstanceVariable: arg1.\r\ttmp1 ~= 0\r\t\tifTrue: [ ^ self at: tmp1 ].\r\tError signal.',			#stamp : 'pm 11/3/2018 20:59',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'valueOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'valueOfInstanceVariable: arg1\r\t| tmp1 |\r\ttmp1 := self offsetFromObjectOfInstanceVariable: arg1.\r\tTranscript show: self.\r\ttmp1 ~= 0\r\t\tifTrue: [ ^ self at: tmp1 ].\r\tError signal.',			#stamp : 'pm 11/3/2018 21:00',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T21:00:10.152281+01:00' ],		#prior : OmReference [ '18' ],		#self : OmReference [ '19' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'valueOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'valueOfInstanceVariable: arg1\r\t| tmp1 |\r\ttmp1 := self offsetFromObjectOfInstanceVariable: arg1.\r\tTranscript show: self.\r\ttmp1 ~= 0\r\t\tifTrue: [ ^ self at: tmp1 ].\r\tError signal.',			#stamp : 'pm 11/3/2018 21:00',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'valueOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'valueOfInstanceVariable: arg1\r\t| tmp1 |\r\ttmp1 := self offsetFromObjectOfInstanceVariable: arg1.\r\tself halt.\r\ttmp1 ~= 0\r\t\tifTrue: [ ^ self at: tmp1 ].\r\tError signal.',			#stamp : 'pm 11/3/2018 21:00',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T21:00:24.333759+01:00' ],		#prior : OmReference [ '19' ],		#self : OmReference [ '20' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'valueOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'valueOfInstanceVariable: arg1\r\t| tmp1 |\r\ttmp1 := self offsetFromObjectOfInstanceVariable: arg1.\r\tself halt.\r\ttmp1 ~= 0\r\t\tifTrue: [ ^ self at: tmp1 ].\r\tError signal.',			#stamp : 'pm 11/3/2018 21:00',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'valueOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'valueOfInstanceVariable: arg1\r\t| tmp1 |\r\ttmp1 := self offsetFromObjectOfInstanceVariable: arg1.\r\ttmp1 ~= 0\r\t\tifTrue: [ ^ self at: tmp1 ].',			#stamp : 'pm 11/3/2018 21:00',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-03T21:31:35.776898+01:00' ],		#prior : OmReference [ '20' ],		#self : OmReference [ '21' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'offsetFromObjectOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'offsetFromObjectOfInstanceVariable: arg1\r\t^ self objClass offsetFromClassOfInstanceVariable: arg1',			#stamp : '',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'offsetFromObjectOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'offsetFromObjectOfInstanceVariable: arg1\r\t| t |\r\tt:=self objClass offsetFromClassOfInstanceVariable: arg1.\r\t^t==0\r\t\tifTrue:[^self error:\'\']\r\t\tifFalse:[t].\r',			#stamp : 'pm 11/3/2018 21:31',			#package : #ObjVSkeleton		}	}}