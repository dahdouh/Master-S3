OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-04T10:35:33.446094+01:00' ],		#prior : OmReference [ 'Pharo.ahvtpytzbei1f41dr91beqwrn', '21' ],		#self : OmReference [ '1' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #allocateAnInstance,			#protocol : #'instance allocation',			#sourceCode : 'allocateAnInstance\r\t| tmp1 tmp2 |\r\ttmp1 := self class new: self numberOfIVs.\r\ttmp1 at: 1 put: self objName.\r\ttmp2 := self numberOfIVs.\r\t2 to: tmp2 do: [ :tmp3 | tmp1 at: tmp3 put: nil ].\r\t^ tmp1',			#stamp : '',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #allocateAnInstance,			#protocol : #'instance allocation',			#sourceCode : 'allocateAnInstance\r\t| tmp1 size |\r\tsize := self numberOfIVs.\r\ttmp1 := self class new: size.\r\ttmp1 at: 1 put: self objName.\r\r\t2 to: size do: [ :tmp3 | tmp1 at: tmp3 put: nil ].\r\t^ tmp1',			#stamp : 'pm 11/4/2018 10:35',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-04T10:37:09.445202+01:00' ],		#prior : OmReference [ '1' ],		#self : OmReference [ '2' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'valueOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'valueOfInstanceVariable: arg1\r\t| tmp1 |\r\ttmp1 := self offsetFromObjectOfInstanceVariable: arg1.\r\ttmp1 ~= 0\r\t\tifTrue: [ ^ self at: tmp1 ].',			#stamp : 'pm 11/3/2018 21:00',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'valueOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'valueOfInstanceVariable: arg1\r\t| tmp1 |\r\ttmp1 := self offsetFromObjectOfInstanceVariable: arg1.\r^ self at: tmp1',			#stamp : 'pm 11/4/2018 10:37',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-04T10:37:10.339074+01:00' ],		#prior : OmReference [ '2' ],		#self : OmReference [ '3' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'valueOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'valueOfInstanceVariable: arg1\r\t| tmp1 |\r\ttmp1 := self offsetFromObjectOfInstanceVariable: arg1.\r^ self at: tmp1',			#stamp : 'pm 11/4/2018 10:37',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'valueOfInstanceVariable:',			#protocol : #'iv management',			#sourceCode : 'valueOfInstanceVariable: arg1\r\t| tmp1 |\r\ttmp1 := self offsetFromObjectOfInstanceVariable: arg1.\r\t^ self at: tmp1',			#stamp : 'pm 11/4/2018 10:37',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-04T10:40:06.48733+01:00' ],		#prior : OmReference [ '3' ],		#self : OmReference [ '4' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t"question, do we have to search in metaclass aswell?\r\tanswer might be later in the tutorial"\r\r\t| Method Super|\r\r\tMethod:=self bodyOfMethod:arg1.\r\tMethod isNil\r\tifFalse:[\r\t\t^Method."we found a corresponding selector"\r\t\t].\r\t"else"\r\t"we do the lookup in the superclass."\r\r\t((self objSuperclassId) isNil) "if we don\'t have a super class, we fail."\r\tifTrue:[\r\t\t^nil.\r\t\t].\r\r\tSuper:=self objSuperclass.\r\tSuper==self\r\tifTrue:[\r\t\t^nil\r\t\t].\r\t^Super lookup:arg1.\r\t\t\r\r',			#stamp : 'pm 11/3/2018 20:27',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t"question, do we have to search in metaclass aswell?\r\tanswer might be later in the tutorial"\r\r\t| Method Super|\r\r\tMethod:=self bodyOfMethod:arg1.\r\tMethod isNil\r\tifFalse:[\r\t\t^Method."we found a corresponding selector"\r\t\t].\r\t"else"\r\t"we do the lookup in the superclass."\r\t\r\tself super: #lookup withArguments: arg1 from: Method.\r\t\r"\t((self objSuperclassId) isNil) \r\tifTrue:[\r\t\t^nil.\r\t\t].\r\r\tSuper:=self objSuperclass.\r\tSuper==self\r\tifTrue:[\r\t\t^nil\r\t\t].\r\t^Super lookup:arg1.\r\t\t\r\r"',			#stamp : 'pm 11/4/2018 10:40',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-04T10:40:21.938385+01:00' ],		#prior : OmReference [ '4' ],		#self : OmReference [ '5' ]	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t"question, do we have to search in metaclass aswell?\r\tanswer might be later in the tutorial"\r\r\t| Method Super|\r\r\tMethod:=self bodyOfMethod:arg1.\r\tMethod isNil\r\tifFalse:[\r\t\t^Method."we found a corresponding selector"\r\t\t].\r\t"else"\r\t"we do the lookup in the superclass."\r\t\r\tself super: #lookup withArguments: arg1 from: Method.\r\t\r"\t((self objSuperclassId) isNil) \r\tifTrue:[\r\t\t^nil.\r\t\t].\r\r\tSuper:=self objSuperclass.\r\tSuper==self\r\tifTrue:[\r\t\t^nil\r\t\t].\r\t^Super lookup:arg1.\r\t\t\r\r"',			#stamp : 'pm 11/4/2018 10:40',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t"question, do we have to search in metaclass aswell?\r\tanswer might be later in the tutorial"\r\r\t| Method Super|\r\r\tMethod:=self bodyOfMethod:arg1.\r\tMethod isNil\r\tifFalse:[\r\t\t^Method."we found a corresponding selector"\r\t\t].\r\t"else"\r\t"we do the lookup in the superclass."\r\t\r\t((self objSuperclassId) isNil) \r\tifTrue:[\r\t\t^nil.\r\t\t].\r\r\tSuper:=self objSuperclass.\r\tSuper==self\r\tifTrue:[\r\t\t^nil\r\t\t].\r\t^Super lookup:arg1.\r\t\t\r\r',			#stamp : 'pm 11/4/2018 10:40',			#package : #ObjVSkeleton		}	}}OmEntry {	#tags : {		#author : 'pm',		#time : DateAndTime [ '2018-11-04T10:42:08.518291+01:00' ],		#prior : OmReference [ '5' ],		#self : OmReference [ '6' ]	},	#content : EpCompositeRefactoring {		#childrenRefactorings : [ ]	}}OmEntry {	#tags : {		#author : 'pm',		#prior : OmReference [ '6' ],		#self : OmReference [ '7' ],		#time : DateAndTime [ '2018-11-04T10:42:08.53036+01:00' ],		#trigger : @3	},	#content : EpMethodModification {		#oldMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t"question, do we have to search in metaclass aswell?\r\tanswer might be later in the tutorial"\r\r\t| Method Super|\r\r\tMethod:=self bodyOfMethod:arg1.\r\tMethod isNil\r\tifFalse:[\r\t\t^Method."we found a corresponding selector"\r\t\t].\r\t"else"\r\t"we do the lookup in the superclass."\r\t\r\t((self objSuperclassId) isNil) \r\tifTrue:[\r\t\t^nil.\r\t\t].\r\r\tSuper:=self objSuperclass.\r\tSuper==self\r\tifTrue:[\r\t\t^nil\r\t\t].\r\t^Super lookup:arg1.\r\t\t\r\r',			#stamp : 'pm 11/4/2018 10:40',			#package : #ObjVSkeleton		},		#newMethod : RGMethodDefinition {			#annotations : IdentityDictionary {				#className : #Obj,				#isMetaSide : false			},			#name : #'lookup:',			#protocol : #'method lookup',			#sourceCode : 'lookup: arg1\r\t"question, do we have to search in metaclass aswell?\r\tanswer might be later in the tutorial"\r\r\t| method Super|\r\r\tmethod:=self bodyOfMethod:arg1.\r\tmethod isNil\r\tifFalse:[\r\t\t^method."we found a corresponding selector"\r\t\t].\r\t"else"\r\t"we do the lookup in the superclass."\r\t\r\t((self objSuperclassId) isNil) \r\tifTrue:[\r\t\t^nil.\r\t\t].\r\r\tSuper:=self objSuperclass.\r\tSuper==self\r\tifTrue:[\r\t\t^nil\r\t\t].\r\t^Super lookup:arg1.\r\t\t\r\r',			#stamp : 'pm 11/4/2018 10:42',			#package : #ObjVSkeleton		}	}}